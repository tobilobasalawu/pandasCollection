// - This represents comment, explains the purpose of the code

//FUNCTIONS
user_travel_choice() // For users to enter and select a choice for destination and departure
date_of_depature() //For users to enter the date tehy wish to depart
passengers_result() //Display the number of passengers for the selected data, depart and destination
passengers_trends() //Display the trends overtime for the number of passengers for the selected data, depart and destination

BEGIN FUNCTION user_travel_choice()
    SET is_input_valid TO FALSE

    SET [list of departure and destination] TO list_of_destination_and_depart 
    //This is the list of travel options 1. DUB - LHR 2. DUB - LTN 3. DUB - MAN 4. EDI - LHR 5. EDI - LTN 6. EDI - MAN 7. GLA - LHR 8. GLA - LTN 9. GLA - MAN 10. LHR - DUB 11. LHR - EDI 12. LHR - GLA 13. LTN - DUB 14. LTN - EDI 15. MAN - DUB 16. MAN - EDI 17. MAN - GLA
  

    WHILE is_input_valid == FALSE

        TRY
            SEND list_of_destination_and_depart TO DISPLAY

            SEND 'Enter the option of destination and departure airport from the menu: ' TO DISPLAY
            RECIEVE user_destination_and_departure_choice AS INTEGER FROM KEYBOARD


            IF user_destination_and_departure_choice < 1 AND user_destination_and_departure_choice > 17  THEN 
                SEND 'You have selected an Invalid Choice, Please try Again! ' TO DISPLAY
            ELSE
                SEND 'You have selected ' + user_destination_and_departure_choice + ' as your travel destination and departure'  TO DISPLAY
                SET is_input_valid TO TRUE
            
            END IF

        CATCH ERROR FROM TRY
            SEND 'Please only enter a number(INTEGER) from the menu displayed above' TO DISPLAY

    RETURN	user_destination_and_departure_choice


END FUNCTION


BEGIN FUNCTION date_of_depature()

    IMPORT DATETIME LIBRARY
    IMPORT DATA HANDLING LIBRARY AS pd

    SET pd.READ_CSV('FILE PATH') TO df

    SET is_date_valid TO FALSE

    WHILE is_date_valid == FALSE
        
        SEND 'Please enter the date you wish to travel for the month of march (DD/MM/YYYY): ' FROM DISPLAY
        RECIEVE user_depart_date FROM KEYBOARD

        SET DATETIME.DATETIME.STRIPTIME(user_depart_date, %d%mm%yyyy%) TO user_depart_date

        IF df[user_depart_date] THEN
            SEND 'You've selected ' + user_depart_date + ' as your date for departure' TO DISPLAY
            SET is_date_valid TO TRUE
        
        ELSE
            SEND 'You have entered the an invalid date, Please Try Again! ' TO DISPLAY

        END IF

    RETURN user_depart_date

END FUNCTION


BEGIN FUNCTION passengers_result(user_destination_and_departure_choice, user_depart_date)

    IMPORT DATA HANDLING LIBRARY AS pd //Pandas Module

    SET pd.READ_CSV('Task3_data_November_22') TO df

    SET user_destination_and_departure_choice.SPLIT(' ') TO user_destination_and_departure_choice

    SET df.LOC[:, user_depart_date] TO date_filtered_df
    SET date_filtered_df.LOC[:, (df['From'] == user_destination_and_departure_choice[1]) & (df['TO'] == user_destination_and_departure_choice[3])] TO filtered_result

    SEND 'This is a range of the number of passengers travelling on the selected date' TO DISPLAY
    SEND 'filtered_result' TO DISPLAY

    RETURN user_destination_and_departure_choice, filtered_result

END FUNCTION


BEGIN FUNCTION passengers_trends(user_destination_and_departure_choice, filtered_result)
	
	IMPORT DATA VIUSALIZATION LIBRARY AS plt //MATPLOTLIB MODULE
	
	SET plt.BAR(user_destination_and_departure_choice, filtered_result) TO BAR_CHART
    plt.XAXIS_LABEL('Number of passengers')
    plt.YAXIS_LABEL('User destination and departure')

    SEND BAR_CHART TO DISPLAY

END FUNCTION